[project]
name = "torch-starter"
version = "0.1.0"
description = "PyTorch development environment with NVIDIA CUDA 12.9 support"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [{ name = "Your Name", email = "your.email@example.com" }]

dependencies = [
    # Core scientific computing
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "matplotlib>=3.7.0",
    
    # PyTorch ecosystem (NVIDIA CUDA compatible)
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0",
    
    # Essential ML packages
    "transformers>=4.30.0",
    "datasets>=2.12.0",
    "safetensors>=0.3.0",
    
    # Data validation and serialization
    "pydantic>=2.0.0",
    
    # Code quality and type checking
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    
    # Utilities
    "tqdm>=4.65.0",
    "pyyaml>=6.0",
    "requests>=2.31.0",
    
    # Jupyter
    "jupyter>=1.0.0",
    "ipykernel>=6.23.0",
    "jupyterlab>=4.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-benchmark>=4.0.0",
    # Additional dev tools
    "interrogate>=1.5.0",
    "python-dotenv>=1.0.0",
]

vis = [
    # Visualization
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "tensorboard>=2.13.0",
]

gpu = [
    # NVIDIA GPU utilities (optional - install only if needed)
    "nvidia-ml-py>=12.535.0",
]

cuda = [
    # CUDA-specific packages (optional - install only if needed)  
    "cupy-cuda12x>=12.0.0",
]

all = ["torch-starter[dev,vis,gpu,cuda]"]

[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

# ==============================================================================
# UV CONFIGURATION - Simplified and more reliable
# ==============================================================================
[tool.uv]
index-strategy = "unsafe-best-match"

[tool.uv.pip]
extra-index-url = [
    "https://download.pytorch.org/whl/cu129",
]

# ==============================================================================
# RUFF CONFIGURATION - Simplified
# ==============================================================================
[tool.ruff]
line-length = 100
target-version = "py311"
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "data/",
    "logs/",
    "models/",
    "checkpoints/",
    ".cache/",
]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings  
    "F",      # pyflakes
    "I",      # isort
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C90",    # mccabe complexity
]

ignore = [
    "E501",   # Line too long (handled by formatter)
]

# ==============================================================================
# MYPY CONFIGURATION - Simplified
# ==============================================================================
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

# Third-party library overrides
[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "torchaudio.*",
    "transformers.*",
    "datasets.*",
    "sklearn.*",
    "scipy.*",
    "matplotlib.*",
    "numpy.*",
    "pandas.*",
]
ignore_missing_imports = true

# ==============================================================================
# PYTEST CONFIGURATION
# ==============================================================================
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--tb=short",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow",
    "gpu: marks tests that require GPU",
    "cuda: marks tests that require CUDA",
]